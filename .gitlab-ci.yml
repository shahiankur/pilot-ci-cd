stages:
  - build
  - lint
  - test
  - production

variables:
  XCODE_WORKSPACE: "pilot-ci-cd.xcworkspace"
  XCODE_SCHEME: "pilot-ci-cd"
  XCODE_SDK: "iphonesimulator"
  XCODE_DESTINATION: "platform=iOS Simulator,OS=16.4,name=iPhone 14 Pro"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - Pods/
build:
  stage: build
  environment: 
    name: build
  script:
    # - xcodebuild -workspace "$XCODE_WORKSPACE" -scheme "$XCODE_SCHEME" -sdk "$XCODE_SDK" -destination "$XCODE_DESTINATION" clean build | xcpretty -s
    - xcodebuild -workspace "$XCODE_WORKSPACE" -scheme "$XCODE_SCHEME" -sdk "$XCODE_SDK" -destination "$XCODE_DESTINATION" clean build | tee build.log
  artifacts:
    paths:
      - build.log
  tags:
  - CI
  - SSH
  
swiftlint:
  stage: lint
  script:
    - pod install --repo-update
    - Pods/SwiftLint/swiftlint
    - xcodebuild clean build -workspace "$XCODE_WORKSPACE" -scheme "$XCODE_SCHEME" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED="NO" | xcpretty --c
  only:
    - merge_requests
  tags:
  - CI
  - SSH

test:
  stage: test
  environment: 
    name: test
  script:
    - xcodebuild -workspace "$XCODE_WORKSPACE" -scheme "$XCODE_SCHEME" -sdk "$XCODE_SDK" -destination "$XCODE_DESTINATION" test | xcpretty -s
  tags:
  - CI
  - SSH

production:
  stage: production
  environment: 
    name: production
  when: manual
  script:
    - xcodebuild -workspace "$XCODE_WORKSPACE" -scheme "$XCODE_SCHEME" -sdk "$XCODE_SDK" -destination "$XCODE_DESTINATION" test | xcpretty -s
  tags:
  - CI
  - SSH
